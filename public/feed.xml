<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Devollox]]></title>
        <description><![CDATA[Devollox]]></description>
        <link>https://devollox.fun/</link>
        <image>
            <url>https://github.com/Devollox/Devollox-Website/blob/main/public/logo512.png</url>
            <title>Devollox</title>
            <link>https://devollox.fun/</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Mon, 27 May 2024 15:03:59 GMT</lastBuildDate>
        <atom:link href="https://devollox.fun/feed.xml" rel="self" type="application/rss+xml"/>
        <language><![CDATA[en]]></language>
        <item>
            <title><![CDATA[Brute Force Effect]]></title>
            <link>https://devollox.fun/blog/bruteforce-effect</link>
            <guid isPermaLink="false">https://devollox.fun/blog/bruteforce-effect</guid>
            <dc:creator><![CDATA[Devollox]]></dc:creator>
            <pubDate>Sun, 26 May 2024 21:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Moving from React to Next.js]]></title>
            <description><![CDATA[<p>Ohh.... Where do I want to start? Oh, yes... Why did I rewrite my site to <code>Next.js</code>. Next.js I chose for a reason, I have already written one website on it, and I liked its architecture. <code>SSR</code> - is probably the thing that attracted me.</p>
<p>Server rendering (SSR, from English server side rendering) is the generation of the HTML code of the entire page on the server in response to a request. It avoids additional data requests from the client and provides fast first rendering and first meaningful rendering.<br>As you might understand, writing a website on the server side is much more difficult, you don&#39;t have a <code>document</code> as such. You have to get around using <code>useEffect</code> and stuff like that.</p>
<pre><code class="prism-code language-javascript"><div class="token-line"><span class="token keyword module">export</span><span class="token plain"> </span><span class="token keyword">const</span><span class="token plain"> </span><span class="token function-variable function">getStaticProps</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword">async</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword control-flow">await</span><span class="token plain"> </span><span class="token function">getPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword control-flow">await</span><span class="token plain"> </span><span class="token function">generateRssFeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword">const</span><span class="token plain"> data </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword control-flow">return</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> data </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span></div></code></pre><p>One example is <code>SSR</code>. Sometimes I think that&#39;s why it&#39;s so complicated. Who does not know that in order for this method to work, you need to return some kind of props.</p>
<p><code>getStaticProps</code></p>
<blockquote>
<p>If you export a function called getStaticProps (Static Site Generation) from a page, Next.js will pre-render this page at build time using the props returned by getStaticProps.</p>
</blockquote>
<p><code>getStaticPaths</code></p>
<blockquote>
<p>If a page has Dynamic Routes and uses getStaticProps, it needs to define a list of paths to be statically generated.<br>When you export a function called getStaticPaths (Static Site Generation) from a page that uses dynamic routes, Next.js will statically pre-render all the paths specified by getStaticPaths.</p>
</blockquote>
<p><code>getServerSideProps</code></p>
<blockquote>
<p>getServerSideProps is a Next.js function that can be used to fetch data and render the contents of a page at request time.</p>
</blockquote>
<p>All these tools allow you to create and implement ideas on the server side.</p>
<p>It is more difficult, of course, but not more difficult than Dark souls 3. Another reason for choosing <code>SEO</code> is optimization. And Router pages. I think I will continue to study Next.js .</p>
]]></description>
            <link>https://devollox.fun/blog/nextjs-react</link>
            <guid isPermaLink="false">https://devollox.fun/blog/nextjs-react</guid>
            <dc:creator><![CDATA[Devollox]]></dc:creator>
            <pubDate>Tue, 30 Apr 2024 21:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Next.js Theme]]></title>
            <description><![CDATA[<p>To change the theme on this site, I went through many libraries. First I wrote this script:</p>
<pre><code class="prism-code language-javascript"><div class="token-line"><span class="token keyword module">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation">,</span><span class="token imports"> </span><span class="token imports punctuation">{</span><span class="token imports"> createContext</span><span class="token imports punctuation">,</span><span class="token imports"> useEffect </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module">from</span><span class="token plain"> </span><span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token keyword module">import</span><span class="token plain"> </span><span class="token imports punctuation">{</span><span class="token imports"> useLocalStorage </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module">from</span><span class="token plain"> </span><span class="token string">&quot;../hooks/useLocalStorage&quot;</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain"></span><span class="token keyword module">export</span><span class="token plain"> </span><span class="token keyword">const</span><span class="token plain"> </span><span class="token maybe-class-name">ThemeContext</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain"></span><span class="token keyword module">export</span><span class="token plain"> </span><span class="token keyword">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name">ThemeProvider</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter punctuation">{</span><span class="token parameter"> children </span><span class="token parameter punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword">const</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">theme</span><span class="token punctuation">,</span><span class="token plain"> setTheme</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">useLocalStorage</span><span class="token punctuation">(</span><span class="token string">&quot;theme&quot;</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string">&quot;light&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain">  </span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token keyword control-flow">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">theme </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string">&quot;dark&quot;</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token property-access">body</span><span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token string">&quot;dark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token keyword control-flow">else</span><span class="token plain"> </span><span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token property-access">body</span><span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token string">&quot;dark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">theme</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword control-flow">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token operator">&lt;</span><span class="token maybe-class-name">ThemeContext</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">Provider</span><span class="token plain"> value</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token plain">theme</span><span class="token punctuation">,</span><span class="token plain"> setTheme</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">      </span><span class="token punctuation">{</span><span class="token plain">children</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token maybe-class-name">ThemeContext</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">Provider</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span></div></code></pre><p>But... This is not what I expected, on the old site where <code>React</code> was used, this code worked 100% and I expected the same thing, but as we know <code>Next.js</code> is a northern framework, and it works very poorly with <code>HTML</code> and that’s why I went to look for libraries.</p>
<p>I found <code>Next-Theme</code>. The code, of course, was really incomprehensible, and I began to study it. I needed to link it to the CMDK.</p>
<pre><code class="prism-code language-javascript"><div class="token-line"><span class="token keyword module">import</span><span class="token plain"> </span><span class="token imports punctuation">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">ThemeProvider</span><span class="token imports"> </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module">from</span><span class="token plain"> </span><span class="token string">&#x27;next-themes&#x27;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain"></span><span class="token keyword">function</span><span class="token plain"> </span><span class="token function maybe-class-name">MyApp</span><span class="token punctuation">(</span><span class="token parameter punctuation">{</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">Component</span><span class="token parameter punctuation">,</span><span class="token parameter"> pageProps </span><span class="token parameter punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword control-flow">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token operator">&lt;</span><span class="token maybe-class-name">ThemeProvider</span><span class="token plain"> defaultTheme</span><span class="token operator">=</span><span class="token string">&quot;system&quot;</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token spread operator">...</span><span class="token plain">pageProps</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Footer</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token maybe-class-name">ThemeProvider</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain"></span><span class="token keyword module">export</span><span class="token plain"> </span><span class="token keyword module">default</span><span class="token plain"> </span><span class="token maybe-class-name">MyApp</span></div></code></pre><p>This is the only component that binds the <code>data-theme</code>, gives it some name, and we add the address itself to the css.</p>
<pre><code class="prism-code language-css"><div class="token-line"><span class="token selector attribute punctuation">[</span><span class="token selector attribute attr-name">data-theme</span><span class="token selector attribute operator">=</span><span class="token selector attribute attr-value">&#x27;light&#x27;</span><span class="token selector attribute punctuation">]</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--bg</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#fff</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--fg</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#000</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--gray</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#888</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--light-gray</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#dedede</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--lighter-gray</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#f5f5f5</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--lightest-gray</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#fafafa</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--article-color</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#212121</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--gray-bg</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#00000</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--kbd-bg</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#fffff</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--header-bg</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token color function">rgba</span><span class="token color punctuation">(</span><span class="token color number">255</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">255</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">255</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">0.8</span><span class="token color punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--gray-alpha</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token color function">rgba</span><span class="token color punctuation">(</span><span class="token color number">19</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">20</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">21</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">0.5</span><span class="token color punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--selection</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token color function">rgba</span><span class="token color punctuation">(</span><span class="token color number">0</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">0</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">0</span><span class="token color punctuation">,</span><span class="token color"> </span><span class="token color number">0.99</span><span class="token color punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--token</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#666</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--comment</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#999</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--keyword</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#000</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--name</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#333</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token variable">--highlight</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token hexcode color">#eaeaea</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span></div></code></pre><p>After studying the library, I made the following code, which I linked to a button in the CMDK.</p>
<pre><code class="prism-code language-javascript"><div class="token-line"><span class="token keyword">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name">ThemeItems</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> activeTheme</span><span class="token punctuation">,</span><span class="token plain"> themes</span><span class="token punctuation">,</span><span class="token plain"> setTheme </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">useTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> setOpen </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">useCommandData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword control-flow">return</span><span class="token plain"> themes</span><span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token keyword control-flow">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">theme </span><span class="token operator">===</span><span class="token plain"> activeTheme</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token keyword control-flow">return</span><span class="token plain"> </span><span class="token keyword null nil">null</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token keyword control-flow">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Item</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">        value</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">theme</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">        key</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token template-string template-punctuation string">`</span><span class="token template-string string">theme-</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">theme</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string template-punctuation string">`</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">        callback</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">          </span><span class="token function">setTheme</span><span class="token punctuation">(</span><span class="token plain">theme</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">          </span><span class="token function">setOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">        </span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">      </span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">        </span><span class="token punctuation">{</span><span class="token plain">theme</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token maybe-class-name">Item</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">
</span></div><div class="token-line"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token operator">&lt;</span><span class="token maybe-class-name">Item</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  value</span><span class="token operator">=</span><span class="token string">&quot;Themes&quot;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  icon</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">&lt;</span><span class="token maybe-class-name">Sparkles</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  keybind</span><span class="token operator">=</span><span class="token string">&quot;t&quot;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  closeOnCallback</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token spread operator">...</span></div></code></pre><p>The code works, I have no complaints, so to speak, there were problems with displaying the default theme, but this was quickly fixed.</p>
]]></description>
            <link>https://devollox.fun/blog/nextjs-theme</link>
            <guid isPermaLink="false">https://devollox.fun/blog/nextjs-theme</guid>
            <dc:creator><![CDATA[Devollox]]></dc:creator>
            <pubDate>Sun, 28 Apr 2024 21:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>